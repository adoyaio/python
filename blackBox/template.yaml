AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: runAdoya entry point.
Globals:
  Api:
    # enable CORS; to make more specific, change the origin wildcard
    # to a particular domain name, e.g. "'www.example.com'"
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
Resources:
  runAdoya:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: runAdoya.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 448
      Timeout: 900
      FunctionName: 'runAdoya'
      Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
  runAdoyaWeekly:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: runAdoyaWeekly.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 448
      Timeout: 900
      FunctionName: 'runAdoyaWeekly'
      Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
  postClient:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: postClient.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 448
      Timeout: 60
      FunctionName: 'postClient'
      Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
      Environment:
        Variables:
          env: 'prod'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/post
            Method: ANY
            Auth:
              ApiKeyRequired: true
  getClient:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: getClient.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 448
      Timeout: 60
      FunctionName: 'getClient'
      Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
      Environment:
        Variables:
          env: 'prod'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/get
            Method: GET
            Auth:
              ApiKeyRequired: true
  getClientHistory:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: getClientHistory.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ''
      MemorySize: 448
      Timeout: 60
      FunctionName: 'getClientHistory'
      Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
      Environment:
        Variables:
          env: 'prod'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/history
            Method: GET
            Auth:
              ApiKeyRequired: true
  postAdmin:
      Type: 'AWS::Serverless::Function'
      Properties:
        Handler: postAdmin.lambda_handler
        Runtime: python3.7
        CodeUri: .
        Description: ''
        MemorySize: 448
        Timeout: 60
        FunctionName: 'postAdmin'
        Role: 'arn:aws:iam::496475828721:role/service-role/lambda_dynamo'
        Environment:
          Variables:
            env: 'lcl'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /api/admin
              Method: post
