AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: runAdoya entry point.
Globals:
  Api:
    # enable CORS; to make more specific, change the origin wildcard
    # to a particular domain name, e.g. "'www.example.com'"
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'x-api-key,Content-Type'"
      AllowOrigin: "'*'"
Resources:
  runAdoya:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: runAdoya.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 900
      FunctionName: "runAdoya"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
  runAdoyaWeekly:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: runAdoyaWeekly.lambda_handler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 900
      FunctionName: "runAdoyaWeekly"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
  postClient:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: clientApi.postClientHandler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 60
      FunctionName: "postClient"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
      Environment:
        Variables:
          env: "prod"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/post
            Method: ANY
            Auth:
              ApiKeyRequired: true
  postClientAdmin:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: clientApi.postClientAdminHandler
      Runtime: python3.7
      CodeUri: .
      Description: "Internal use 'shortcut' endpoint for admins, supports read, update, delete, & list operations on any table"
      MemorySize: 448
      Timeout: 60
      FunctionName: "postClientAdmin"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
      Environment:
        Variables:
          env: "prod"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/admin
            Method: post
  getClient:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: clientApi.getClientHandler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 60
      FunctionName: "getClient"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
      Environment:
        Variables:
          env: "prod"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/get
            Method: GET
            Auth:
              ApiKeyRequired: true
  getClientCostHistory:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: clientApi.getClientCostHistoryHandler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 60
      FunctionName: "getClientCostHistory"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
      Environment:
        Variables:
          env: "prod"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/cost/history
            Method: GET
            Auth:
              ApiKeyRequired: true
  getClientKeywordHistory:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: clientApi.getClientKeywordHistoryHandler
      Runtime: python3.7
      CodeUri: .
      Description: ""
      MemorySize: 448
      Timeout: 60
      FunctionName: "getClientKeywordHistory"
      Role: "arn:aws:iam::496475828721:role/service-role/lambda_dynamo"
      Environment:
        Variables:
          env: "prod"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/client/keyword/history/
            Method: GET
            Auth:
              ApiKeyRequired: true
